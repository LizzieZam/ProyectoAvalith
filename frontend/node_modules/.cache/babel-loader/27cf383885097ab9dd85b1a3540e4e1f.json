{"ast":null,"code":"var _jsxFileName = \"E:\\\\CATO\\\\VERANO\\\\Lab\\\\fotoshareweb\\\\src\\\\componentes\\\\Listado.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { Redirect } from 'react-router-dom';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 550,\n    height: 550,\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  titleBar: {\n    background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' + 'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  },\n  icon: {\n    color: 'white'\n  }\n});\n\nclass Listado extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imagenes: [],\n      img: [],\n      toDashboard: false\n    };\n\n    this.handleClick = id => event => {\n      axios.get('http://localhost:8000/api/imagen/' + id).then(res => {\n        const img = res.data;\n        this.setState({\n          img\n        });\n        console.log(img);\n        this.setState({\n          toDashboard: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8000/api/imagen').then(res => {\n      const imagenes = res.data;\n      this.setState({\n        imagenes\n      });\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    if (this.state.toDashboard === true) {\n      return React.createElement(Redirect, {\n        to: {\n          pathname: '/imagen',\n          state: {\n            data: this.state.img\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 200,\n      spacing: 1,\n      className: classes.gridList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.imagenes.map(imagen => React.createElement(GridListTile, {\n      key: imagen.id,\n      cols: imagen.featured ? 2 : 1,\n      rows: imagen.row ? 2 : 1,\n      onClick: this.handleClick(imagen.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: '/images/' + imagen.image,\n      alt: imagen.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: imagen.name,\n      titlePosition: \"top\",\n      actionIcon: React.createElement(IconButton, {\n        \"aria-label\": \"star \".concat(imagen.name),\n        className: classes.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(StarBorderIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })),\n      actionPosition: \"left\",\n      className: classes.titleBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withStyles(styles)(Listado);","map":{"version":3,"sources":["E:\\CATO\\VERANO\\Lab\\fotoshareweb\\src\\componentes\\Listado.js"],"names":["React","Component","axios","withStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","Redirect","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","transform","titleBar","icon","color","Listado","state","imagenes","img","toDashboard","handleClick","id","event","get","then","res","data","setState","console","log","componentDidMount","render","classes","props","pathname","map","imagen","featured","row","image","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {  Redirect } from 'react-router-dom';\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  gridList: {\r\n    width: 550,\r\n    height: 550,\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\r\n      'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  icon: {\r\n    color: 'white',\r\n  },\r\n  });\r\nclass Listado extends Component {\r\n\r\n    state = {\r\n        imagenes: [],\r\n        img:[],\r\n        toDashboard: false,\r\n        \r\n    }\r\n    componentDidMount(){\r\n        axios.get('http://localhost:8000/api/imagen').then(res=>{\r\n            const imagenes = res.data;\r\n            this.setState({imagenes});\r\n        });\r\n    }\r\n\r\n    handleClick =id => event =>\r\n    {\r\n        \r\n            axios.get('http://localhost:8000/api/imagen/'+id).then(res=>{\r\n                \r\n                const img = res.data;\r\n                this.setState({img});\r\n                console.log(img);\r\n            this.setState({ toDashboard: false});\r\n            });\r\n       \r\n    }\r\n    render() {\r\n      const {classes} = this.props;\r\n      if (this.state.toDashboard === true) {\r\n        return <Redirect to={{\r\n            pathname: '/imagen',\r\n            state: { data: this.state.img}\r\n        }} />\r\n      }\r\n        return (\r\n         <div className={classes.root}>\r\n         <GridList cellHeight={200} spacing={1} className={classes.gridList}>\r\n           {this.state.imagenes.map(imagen => (\r\n             <GridListTile key={imagen.id} cols={imagen.featured ? 2 : 1} rows={imagen.row ? 2 : 1} onClick={this.handleClick(imagen.id)}>\r\n               <img src={'/images/'+imagen.image} alt={imagen.name} />\r\n               <GridListTileBar\r\n                 title={imagen.name}\r\n                 titlePosition=\"top\"\r\n                 actionIcon={\r\n                   <IconButton aria-label={`star ${imagen.name}`} className={classes.icon}>\r\n                     <StarBorderIcon />\r\n                   </IconButton>\r\n                 }\r\n                 actionPosition=\"left\"\r\n                 className={classes.titleBar}\r\n               />\r\n             </GridListTile>\r\n           ))}\r\n         </GridList>\r\n       </div>\r\n        );\r\n    }\r\n}\r\nexport default   withStyles(styles)(Listado);"]},"metadata":{},"sourceType":"module"}